// Generated by Selenium IDE
require('chromedriver');
const { Builder, By, Key, until} = require('selenium-webdriver');
const chai = require('chai');
const expect = chai.expect;
const chrome = require('selenium-webdriver/chrome');

const screen = {
  width: 1080,
  height: 1920
};

describe('Harvest a potato crop', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    let chrome_options = new chrome.Options().headless().windowSize(screen);
    //let chrome_options = new chrome.Options().windowSize(screen);

    driver = await new Builder()
            .forBrowser('chrome')
            .setChromeOptions(chrome_options)
            .build();

    // 1 | open | http://127.0.0.1:5501/bahay_cube.html | 
    await driver.get("http://127.0.0.1:5501/bahay_cube.html")
    // 2 | setWindowSize | 1294x1392 | 
    await driver.manage().window().setRect({ width: 1294, height: 1392 })
    // 3 | click | id=tile_id_0 | 
    await driver.findElement(By.id("tile_id_0")).click()
    // 4 | click | css=.till_btn | 
    await driver.findElement(By.css(".till_btn")).click()
    // 5 | click | id=tile_id_0 | 
    await driver.findElement(By.id("tile_id_0")).click()
    // 6 | click | css=.plant_btn | 
    await driver.findElement(By.css(".plant_btn")).click()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })

  it("Selected tile class should have 'potato_planted'", async function() {
    // 7 | click | xpath=//label[@id='potato_crop'] | 
    await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//label[@id=\'potato_crop\']"))), 1000)
    await driver.sleep(1000);
    // 8 | click | id=crop_to_plant_btn | 
    await driver.findElement(By.id("crop_to_plant_btn")).click()
    selected_tile  = await driver.findElement(By.id("tile_id_0"));
    let tile_class = await selected_tile.getAttribute('class');
    expect(tile_class).to.not.eq('potato_planted');
  })

  it("Total Earnings should have a value of 90", async function() {
    // 7 | click | xpath=//label[@id='potato_crop'] | 
    await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//label[@id=\'potato_crop\']"))), 1000)
    await driver.sleep(1000);
    // 8 | click | id=crop_to_plant_btn | 
    await driver.findElement(By.id("crop_to_plant_btn")).click()
    // 9 | verifyElementPresent | css=.potato_planted | 
    // 10 | verifyText | css=.total_earnings_value | 90
    let total_earnings = await driver.findElement(By.css(".total_earnings_value")).getText()
    expect(total_earnings).to.eq("90");
  })

  it("Planted potato tile should have 5 seconds waiting time to harvest", async function() {
    // 7 | click | xpath=//label[@id='potato_crop'] | 
    await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//label[@id=\'potato_crop\']"))), 1000)
    await driver.sleep(1000);
    // 8 | click | id=crop_to_plant_btn | 
    await driver.findElement(By.id("crop_to_plant_btn")).click()
    // 9 | waitForElementPresent | css=.harvest | 5000
    await driver.wait(until.elementLocated(By.css(".harvest")), 5000)
    selected_tile  = await driver.findElement(By.id("tile_id_0"));
    let tile_class = await selected_tile.getAttribute('class');
    expect(tile_class).to.not.eq('harvest');
  })

  it("Planted potato tile should have $15 tile text", async function() {
    // 7 | click | xpath=//label[@id='potato_crop'] | 
    await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//label[@id=\'potato_crop\']"))), 1000)
    await driver.sleep(1000);
    // 8 | click | id=crop_to_plant_btn | 
    await driver.findElement(By.id("crop_to_plant_btn")).click()
    // 9 | waitForElementPresent | css=.harvest | 5000
    await driver.wait(until.elementLocated(By.css(".harvest")), 5200)
    // 10 | waitForText | css=#tile_id_0 > .tile_text | $15
    selected_tile = await driver.wait(until.elementTextIs(await driver.findElement(By.css("#tile_id_0 > .tile_text")), '$15'), 5200)
    let tile_text = await selected_tile.getText();
    expect(tile_text).to.eq('$15');
  })

  it("Total earnings should be $105 after harvesting potato crop", async function() {
    // 7 | click | xpath=//label[@id='potato_crop'] | 
    await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//label[@id=\'potato_crop\']"))), 1000)
    await driver.sleep(1000);
    // 8 | click | id=crop_to_plant_btn | 
    await driver.findElement(By.id("crop_to_plant_btn")).click()
    // 9 | waitForElementPresent | css=.harvest | 5000
    await driver.wait(until.elementLocated(By.css(".harvest")), 5200)
    // 10 | waitForText | css=#tile_id_0 > .tile_text | $15
    await driver.wait(until.elementTextIs(await driver.findElement(By.css("#tile_id_0 > .tile_text")), '$15'), 5200)
    // 11 | click | id=tile_id_0 | 
    await driver.findElement(By.id("tile_id_0")).click()
    // 12 | click | id=harvest_btn | 
    await driver.findElement(By.id("harvest_btn")).click()
    // 13 | verifyText | css=.total_earnings_value | 105
    let total_earnings = await driver.findElement(By.css(".total_earnings_value")).getText()
    expect(total_earnings).to.eq("105");
  })

  // it("Selected tile class should have 'potato_planted'", async function() {
  //   // 7 | click | xpath=//label[@id='potato_crop'] | 
  //   await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//label[@id=\'potato_crop\']"))), 1000)
  //   await driver.sleep(1000);
  //   // 8 | click | id=crop_to_plant_btn | 
  //   await driver.findElement(By.id("crop_to_plant_btn")).click()
    
  // })

  // it('harvest_potato_crop', async function() {
  //   // Test name: harvest_potato_crop
  //   // Step # | name | target | value
  //   // 1 | open | http://127.0.0.1:5501/bahay_cube.html | 
  //   await driver.get("http://127.0.0.1:5501/bahay_cube.html")
  //   // 2 | setWindowSize | 1294x1392 | 
  //   await driver.manage().window().setRect({ width: 1294, height: 1392 })
  //   // 3 | click | id=tile_id_0 | 
  //   await driver.findElement(By.id("tile_id_0")).click()
  //   // 4 | click | css=.till_btn | 
  //   await driver.findElement(By.css(".till_btn")).click()
  //   // 5 | click | id=tile_id_0 | 
  //   await driver.findElement(By.id("tile_id_0")).click()
  //   // 6 | verifyElementPresent | css=.tilled | 
  //   {
  //     const elements = await driver.findElements(By.css(".tilled"))
  //     assert(elements.length)
  //   }
  //   // 7 | click | css=.plant_btn | 
  //   await driver.findElement(By.css(".plant_btn")).click()
  //   // 8 | click | xpath=//label[@id='potato_crop'] | 
  //   await driver.findElement(By.xpath("//label[@id=\'potato_crop\']")).click()
  //   // 9 | click | id=crop_to_plant_btn | 
  //   await driver.findElement(By.id("crop_to_plant_btn")).click()
  //   // 10 | verifyElementPresent | css=.potato_planted | 
  //   {
  //     const elements = await driver.findElements(By.css(".potato_planted"))
  //     assert(elements.length)
  //   }
  //   // 11 | verifyText | css=.total_earnings_value | 90
  //   assert(await driver.findElement(By.css(".total_earnings_value")).getText() == "90")
  //   // 12 | waitForElementPresent | css=.harvest | 5000
  //   await driver.wait(until.elementLocated(By.css(".harvest")), 5000)
  //   // 13 | waitForText | css=#tile_id_0 > .tile_text | $15
  //   await driver.wait(until.elementTextIs(await driver.findElement(By.css("#tile_id_0 > .tile_text")), '$15'), 30000)
  //   // 14 | click | id=tile_id_0 | 
  //   await driver.findElement(By.id("tile_id_0")).click()
  //   // 15 | click | id=harvest_btn | 
  //   await driver.findElement(By.id("harvest_btn")).click()
  //   // 16 | verifyText | css=.total_earnings_value | 105
  //   assert(await driver.findElement(By.css(".total_earnings_value")).getText() == "105")
  // })
})
